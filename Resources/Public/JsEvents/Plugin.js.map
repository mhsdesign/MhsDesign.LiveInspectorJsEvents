{
  "version": 3,
  "sources": ["../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/manifest.ts", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/createConsumerApi.ts", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/registry/AbstractRegistry.ts", "../../Private/JsEvents/node_modules/@neos-project/positional-array-sorter/src/positionalArraySorter.ts", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/registry/SynchronousRegistry.ts", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/registry/SynchronousMetaRegistry.ts", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/registry/index.ts", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/redux-saga-effects/index.js", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../Private/JsEvents/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-guest-frame/index.js", "../../Private/JsEvents/src/onNodeChangeSendEvent.js", "../../Private/JsEvents/src/initializeJsAPI.js", "../../Private/JsEvents/src/manifest.js", "../../Private/JsEvents/src/index.js"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, null, null, null, "import {takeLatest} from 'redux-saga/effects'\nimport {actionTypes, selectors} from '@neos-project/neos-ui-redux-store'\n// https://github.com/neos/neos-ui/blob/7ede460ec1bb8dd4455fc636b875c137d112e89d/packages/neos-ui-guest-frame/src/dom.js#L313\nimport {dispatchCustomEvent} from '@neos-project/neos-ui-guest-frame'\n\n// cache of all pending changes of the current edited node.\n// will be updated on commit event - and flushed on discard.\n// https://github.com/neos/neos-ui/blob/7ede460ec1bb8dd4455fc636b875c137d112e89d/packages/neos-ui-redux-store/src/UI/Inspector/selectors.ts#L15\n// https://github.com/neos/neos-ui/blob/7ede460ec1bb8dd4455fc636b875c137d112e89d/packages/neos-ui-redux-store/src/UI/Inspector/index.ts#L91\nlet lastTransientValues = {};\n\nexport default function* onNodeChangeSendEvent({store}) {\n\n    // COMMIT happens on every subtle change in the inspector. (sometimes even when the previousValue === newValue)\n    yield takeLatest(actionTypes.UI.Inspector.COMMIT, function* (action) {\n        const {focusedNode, propertyId, value} = action.payload;\n\n        const previousValue = typeof lastTransientValues[propertyId] !== \"undefined\"\n            ? lastTransientValues[propertyId].value\n            : focusedNode.properties[propertyId]\n\n        if (previousValue === value) {\n            // does happen\n            // fx. when re-selecting the same option from a select box\n            return\n        }\n\n        const updatedProperty = {\n            name: propertyId,\n            updated: value,\n            previous: previousValue\n        }\n\n        dispatchCustomEvent('Neos.NodeCommit', 'New property value of node was committed.', {\n            node: focusedNode,\n            property: updatedProperty\n        })\n\n        // update cache\n        const state = store.getState();\n        lastTransientValues = selectors.UI.Inspector.transientValues(state);\n    })\n\n    // DISCARD happens when you dont apply the changes.\n    yield takeLatest(actionTypes.UI.Inspector.DISCARD, function* (action) {\n        const {focusedNodeContextPath} = action.payload;\n\n        const state = store.getState();\n        const focusedNode = selectors.CR.Nodes.nodeByContextPath(state)(focusedNodeContextPath)\n\n        const updatedProperties = Object.entries(lastTransientValues).map(([propertyIdToBeReset, propertyUnchangedValueToBeReset]) => {\n            return {\n                name: propertyIdToBeReset,\n                updated: focusedNode.properties[propertyIdToBeReset],\n                previous: propertyUnchangedValueToBeReset.value\n            }\n        })\n        // flush cache\n        lastTransientValues = {};\n\n        dispatchCustomEvent('Neos.NodeDiscard', 'Previously changed properties of node were reset.', {\n            node: focusedNode,\n            properties: updatedProperties\n        })\n    })\n}\n", "// https://github.com/neos/neos-ui/blob/7ede460ec1bb8dd4455fc636b875c137d112e89d/packages/neos-ui-guest-frame/src/dom.js#L76\nimport {findNodeInGuestFrame } from '@neos-project/neos-ui-guest-frame'\n\n// use it like neos.guestFrame.findElementByNode(node)\nexport const addGuestFrameLibrary = () => {\n    if (window.neos === undefined) {\n        throw new Error(`Could not add library to Neos API, because 'window.neos' is not defined.`);\n    }\n\n    const alias = 'guestFrame';\n    if (window.neos[alias] !== undefined) {\n        throw new Error(`Could not initialize API, because ${alias} is already defined.`);\n    }\n    window.neos[alias] = {\n        findElementByNode: (node) => {\n            const {contextPath} = node;\n            return findNodeInGuestFrame(contextPath);\n        }\n    }\n}\n", "import manifest from '@neos-project/neos-ui-extensibility';\nimport onNodeChangeSendEvent from './onNodeChangeSendEvent';\nimport {addGuestFrameLibrary} from \"./initializeJsAPI\";\n\nmanifest('MhsDesign.LiveInspectorJsEvents:JsEvents', {}, globalRegistry => {\n    addGuestFrameLibrary();\n    const sagasRegistry = globalRegistry.get('sagas');\n    sagasRegistry.set('MhsDesign.LiveInspectorJsEvents/JsEvents', {saga: onNodeChangeSendEvent});\n});\n", "require('./manifest');\n"],
  "mappings": "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",
  "names": ["init_manifest", "__esmMin", "init_createConsumerApi", "__esmMin", "init_manifest", "readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "init_AbstractRegistry", "__esmMin", "init_positionalArraySorter", "__esmMin", "init_SynchronousRegistry", "__esmMin", "init_AbstractRegistry", "init_positionalArraySorter", "init_SynchronousMetaRegistry", "__esmMin", "init_SynchronousRegistry", "init_registry", "__esmMin", "init_SynchronousRegistry", "init_SynchronousMetaRegistry", "dist_default", "init_dist", "__esmMin", "init_createConsumerApi", "init_readFromConsumerApi", "init_registry", "readFromConsumerApi", "require_redux_saga_effects", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_redux_store", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_guest_frame", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "onNodeChangeSendEvent", "store", "action", "focusedNode", "propertyId", "value", "previousValue", "lastTransientValues", "state", "focusedNodeContextPath", "updatedProperties", "propertyIdToBeReset", "propertyUnchangedValueToBeReset", "import_effects", "import_neos_ui_redux_store", "import_neos_ui_guest_frame", "init_onNodeChangeSendEvent", "__esmMin", "import_neos_ui_guest_frame", "addGuestFrameLibrary", "init_initializeJsAPI", "__esmMin", "alias", "node", "contextPath", "manifest_exports", "init_manifest", "__esmMin", "init_dist", "init_onNodeChangeSendEvent", "init_initializeJsAPI", "dist_default", "globalRegistry", "addGuestFrameLibrary", "onNodeChangeSendEvent"]
}
